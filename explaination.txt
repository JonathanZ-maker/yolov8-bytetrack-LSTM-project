Project Folder Description:
The cam_test folder contains all the trajectory information used for training: mot16-02 and self-recorded video trajectories
2. The "cam_test_seprate" folder contains trajectory information with separate front and rear perspectives
3. The cam_video folder contains the self-recorded videos used for testing and visualization
The "models" folder contains all the trained models
The "MOT_evaluation_results" folder contains the trajectory information and videos used in the comparison tracking algorithm
The "py-motmetrics-develop" folder is a toolkit used to evaluate tracking algorithms
The records folder is used to store the pictures and data results formed during training and testing, as well as the table drawing in the report
8. The weights folder is used to store the weight parameter files used for object detection and tracking.

Project code description:
Train the model using the train_grid.py file and use grid search to find the optimal parameters. Different datasets can be trained by manually modifying the folder_path in line 15.
2. Test the single model using the test_model.py file. This is to conduct the 8/2 test with the data of the entire folder. Manually modify the folder address of the tenth row, and manually modify lines 14 to 16 and 21 to specify the trained model to be used.
3. Compare the test model with the complete motion trajectory using test_model_fuline.py. This is to conduct the test with the entire data. Manually modify lines 10, 11, 15, and 16 to specify different data and models.
4. Test the model. Compare the front and back data of the camera with test_model_FB.py. This data is tested with the data of the entire folder. Manually modify lines 10, 14, 15, 16, and 21 to specify the data and model.
5. For multi-step measurement, try the n_step_prediction.py file. Modify lines 11-15 and 19 to specify the file, model, and number of steps.
6. For the final video, temporarily use the track.py file. Manually modify 8-15 to specify the video file and model.
